/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-02-28 15:31:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class damier_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1709130290208L));
    _jspx_dependants.put("/head.jsp", Long.valueOf(1709134139067L));
    _jspx_dependants.put("/navigation.jsp", Long.valueOf(1709133759345L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("    ");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <style>\n");
      out.write("        footer\n");
      out.write("        {\n");
      out.write("            position: fixed;\n");
      out.write("            left: 0;\n");
      out.write("            bottom: 0;\n");
      out.write("            width: 100%;\n");
      out.write("            text-align: center;\n");
      out.write("            background-color:green;\n");
      out.write("            padding:10px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        footer > p\n");
      out.write("        {\n");
      out.write("            color:white;\n");
      out.write("        }\n");
      out.write("        nav\n");
      out.write("        {\n");
      out.write("            background-color:green;\n");
      out.write("            padding:20px;\n");
      out.write("        }\n");
      out.write("        nav > a\n");
      out.write("        {\n");
      out.write("            color:white;\n");
      out.write("            text-decoration:none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        nav > a:hover\n");
      out.write("        {\n");
      out.write("            color:yellow;\n");
      out.write("            transition:1s;\n");
      out.write("        }\n");
      out.write("        table\n");
      out.write("        {\n");
      out.write("            border:black solid black; \n");
      out.write("            border-collapse: collapse;\n");
      out.write("        }\n");
      out.write("        td\n");
      out.write("        {\n");
      out.write("            padding: 40px;\n");
      out.write("        }\n");
      out.write("        .black\n");
      out.write("        {\n");
      out.write("            background-color:black;\n");
      out.write("        }\n");
      out.write("        .white\n");
      out.write("        {\n");
      out.write("            background-color:white;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>");
      out.write("\n");
      out.write("    <body>\n");
      out.write("        ");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <style>\n");
      out.write("        footer\n");
      out.write("        {\n");
      out.write("            position: fixed;\n");
      out.write("            left: 0;\n");
      out.write("            bottom: 0;\n");
      out.write("            width: 100%;\n");
      out.write("            text-align: center;\n");
      out.write("            background-color:green;\n");
      out.write("            padding:10px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        footer > p\n");
      out.write("        {\n");
      out.write("            color:white;\n");
      out.write("        }\n");
      out.write("        nav\n");
      out.write("        {\n");
      out.write("            background-color:green;\n");
      out.write("            padding:20px;\n");
      out.write("        }\n");
      out.write("        nav > a\n");
      out.write("        {\n");
      out.write("            color:white;\n");
      out.write("            text-decoration:none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        nav > a:hover\n");
      out.write("        {\n");
      out.write("            color:yellow;\n");
      out.write("            transition:1s;\n");
      out.write("        }\n");
      out.write("        table\n");
      out.write("        {\n");
      out.write("            border:black solid black; \n");
      out.write("            border-collapse: collapse;\n");
      out.write("        }\n");
      out.write("        td\n");
      out.write("        {\n");
      out.write("            padding: 40px;\n");
      out.write("        }\n");
      out.write("        .black\n");
      out.write("        {\n");
      out.write("            background-color:black;\n");
      out.write("        }\n");
      out.write("        .white\n");
      out.write("        {\n");
      out.write("            background-color:white;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>");
      out.write("\n");
      out.write("        ");
      out.write("<nav>\n");
      out.write("    <a href=\"accueil.jsp\">Accueil</a>\n");
      out.write("    <a href=\"servlet-client\">Client</a>\n");
      out.write("</nav>");
      out.write("\n");
      out.write("        <h2>Damier en JEE</h2>\n");
      out.write("        <table>\n");
      out.write("            <tbody>\n");
      out.write("            ");
 
                int line = Integer.parseInt((String) request.getAttribute("lin"));
                int col = Integer.parseInt((String) request.getAttribute("col"));
                String[] colors = {"black", "white"};

                for (int i = 0; i < col; i++)
                {
                    
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                    ");

                    for (int j = 0; j < line; j++)
                    {
                        String color = colors[(j+i)%2];
                        
      out.write(" \n");
      out.write("                        <td class=\"");
      out.print( color );
      out.write("\"></td>\n");
      out.write("                        ");

                    }
                    
      out.write("\n");
      out.write("                    </tr>\n");
      out.write("                    ");

                }
            
      out.write("\n");
      out.write("            </tbody>\n");
      out.write("        </table>\n");
      out.write("        ");
      out.write("<footer>\n");
      out.write("    <p>Copyright alexiiiiiis</p>\n");
      out.write("</footer>");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
